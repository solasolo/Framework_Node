import { Logger } from 'Logger';
import { Stream } from 'stream';
declare class _Facility {
    Copy(obj: any, other: any, props?: string[]): any;
    CopyExclude(obj: any, other: any, props?: string[]): any;
    ReverseMap(obj: any): any;
    Array2Map(arr: any[], key_name?: string, value_name?: string): any;
    Array2Object(arr: any[], key_name?: string): any;
    Object2Map(obj: any, value_name?: string): any;
    LowercaseToPascal(name: string): string;

    MaybeJSON(str: string): boolean;

    ReadStreamString(s: Stream, encoding?: string): Promise<string>;
    GenPromise(): any[];

    SafeException(logger: Logger): void;
    SafeClose(logger: Logger, close_task?: () => void): void;
    ArrayFy(fn: any): any;
    HtmlFilt(str: string): string;
}

declare class _Hash {
    SHA1(str: string): string;
    SHA256(str: string): string;
    MD5(str: string): string;
    StrongHash(str: string): string;
}

declare class _GUID {
    Gen(): string;
    New32(): string;
    New64(): string;
    RandomDigital(n: number): string;
}
declare class _XMLHelper {
    ToXML(data: any, cdata?: boolean): string;
    ToObject(xml: string): any;
}


export const Facility: _Facility;
export const XMLHelper: _XMLHelper;
export const Hash: _Hash;
export const GUID: _GUID;
export function Currency(val: string | number | null | undefined, fraction?: number): string;
